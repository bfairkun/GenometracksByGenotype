## Loop thru sashimi plots

{% set grouped_df = DF.groupby(['Group_label', 'Strand' ]) -%}

{% for (Group_label, Strand), df in grouped_df %}
{% for i,row in df.iterrows() %}

{% if row['ContainsBedgzFile'] == "1" %}

[ {{ row['bw_out'] }} sashimi ]
title = {{ Group_label }} {{ Strand}}
bw_file = {{ row['bw_out'] }}
link_file = {{ row['links_out'] }}
height = 2
bw_color = {{ row['color'] }}
type = fill
alpha = 1
min_value = 0
max_value = {{ row['PerGroupMaxPerInd'] }}
number_of_bins = 700
nans_to_zeros = true
show_data_range = false
y_axis_values = original
file_type = bigwig
{% if row['Strand'] == "-" %}
orientation = inverted
{% endif %}
y_axis_values = original
link_color = black
line_style = solid
fontsize = 8
# The link in Sashimi plot is a Bezier curve.
# The height of the curve is calculated from the length of the intron.
# When the y-axis in bigwig track is different, the height of curve needs to be scaled.
scale_link_height = 1
# The line width for links is proportion to the numbers at the last column in links file (PSI).
# But the absolute width is calculated from the supplied numbers, which can look too thin or too wide sometimes.
# Use scale_line_width to scale the absolute line widths.
# You may need to try several values to get a satisfying result.
scale_line_width = 0.05
file_type = sashimiBigWig
show_number = true

{% endif %}
{% endfor %}
{% endfor %}

## Loop thru non-shashimi plots

{% for (Group_label, Strand), df in grouped_df %}

[ {{ group_label }} {{ Strand }} mock_for_axes ]
file = {{ df.iloc[0]['bw_out'] }}
height = 2
color = {{ df.iloc[0]['color'] }}
type = line
alpha = 0
min_value = 0
max_value = {{ df.iloc[0]['PerGroupMaxMean'] }}
number_of_bins = 700
nans_to_zeros = true
show_data_range = true
y_axis_values = original
file_type = bigwig
{% if Strand == "-" %}
orientation = inverted
{% endif %}

{% for i,row in df.iterrows() %}

[ {{ row['bw_out'] }} ]
file = {{ row['bw_out'] }}
title = {{ Group_label }} {{ Strand}}
height = 2
color = {{ row['color'] }}
type = line
alpha = 1
number_of_bins = 700
nans_to_zeros = true
show_data_range = false
overlay_previous = share-y
y_axis_values = original
file_type = bigwig
# Plot inverted is {{ row['Strand'] }}
{% if row['Strand'] == "-" %}
orientation = inverted
{% endif %}

{% endfor %}
{% endfor %}

[vlines]
type = vlines
file = {{ OutputPrefix }}SNP.bed

[spacer]